

# from telethon import *
# from secrete import Token
# from all_functions import get_keyword_tiker_moex, cashflow_publick_reading
# from Config import Config
#
#
# client2 = TelegramClient('my_account.session2', Token.api_id2, Token.api_hash2)
#
#
# @client2.on(events.NewMessage(chats=Config.pamper_channels_id))
# async def pamper_channels_handler(event):
#     id_chennal = event.message.chat_id# –¥–æ—Å—Ç–∞–µ–º id—á–∞—Ç–∞ –∏–ª–∏ –∫–∞–∫–Ω–∞–ª –æ—Ç –∫–æ—Ç–æ—Ä–æ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
#     text = event.message.message # –¥–æ—Å—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏
#     tiker = str(get_keyword_tiker_moex(text, Config.tickers_moex))# –Ω–∞—Ö–æ–¥–∏–º —Ç–∏–∫–µ—Ä –≤ —Ç–µ–∫—Å—Ç–µ
#     if tiker == 'ü§∑‚Äç‚ôÇ': #–µ—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–∏–∫–µ—Ä–∞ MOEX
#         print(f'–í –¥–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Ç–µ–∫–µ—Ä—ã MOEX')
#     else:#–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–∏–∫–µ—Ä –≤ —Ç–µ–∫—Å—Ç–µ
#
#         if id_chennal == Config.pamper_channels['–°–ò–ì–ù–ê–õ–´ –æ—Ç CASHFLOW']:
#             cashflow_publick_reading(text, tiker)
#         # if id_chennal == Config.pamper_channels['–ú–û–°–ö–û–í–°–ö–ò–ô –ò–ù–í–ï–°–¢–û–†']:
#         #     mosinvestor_publick_reading(text, tiker)
