from secrete import Token
# from message_reading import oleg_reading
from datetime import datetime
from telethon import *
from all_functions import *
from aiogram import Bot, Dispatcher , types, executor
# from user_79065475988 import client2
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
# from AlorPy import AlorPy  # –†–∞–±–æ—Ç–∞ —Å Alor OpenAPI V2
from keywords import Keywords, Risck
from Config import Config  # –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
from bs4 import BeautifulSoup


API_TOKEN = Token.bot_token


# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


#—Å–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –Ω–∞ –ê–ª–æ—Ä
# apProvider = AlorPy(Config.UserName, Config.RefreshToken)

exchange = 'MOEX'  # –ö–æ–¥ –±–∏—Ä–∂–∏ MOEX –∏–ª–∏ SPBX
symbol = 'SBER'  # –¢–∏–∫–µ—Ä
port_io = 'D78230'


#api –∫–ª—é—á–∏ –∏ —Ç–æ–∫–µ–Ω—ã
account = ['-1001892817733','-1001857334624']
api_id = Token.api_id  # –∑–∞–¥–∞–µ–º API
api_hash = Token.api_hash  # –∑–∞–¥–∞–µ–º HASH
phone = Token.phone

async def get_dialodgs():
    dialogs = await client2.get_dialogs()
    dialogs = [f'{i.name} : {i.id}' for i in dialogs ]
    print(dialogs)

client2 = TelegramClient('my_account.session2', Token.api_id2, Token.api_hash2)
client = TelegramClient('my_account.session', api_id, api_hash)



#–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–æ–ª—å–∫–æ –∏–∑ –∫–∞–Ω–∞–ª–∞ id –∏–∑ —Å–ø–∏—Å–∫–∞ channel_vip_vip_id
# @client2.on(events.NewMessage(chats=Config.channel_vip_vip_id))
async def vip_channels_handler(event):
    # –¥–æ—Å—Ç–∞–µ–º id—á–∞—Ç–∞ –∏–ª–∏ –∫–∞–∫–Ω–∞–ª –æ—Ç –∫–æ—Ç–æ—Ä–æ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    id_chennal = event.message.chat_id
    # –¥–æ—Å—Ç–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–µ —Å –º–µ–¥–∏–∞
    message = event.message
    print(message.message)
    # –¥–æ—Å—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏
    text = event.message.message
    if id_chennal == Config.channel_vip_dict['31. Antrading Official +| VipPirates']:
        print(text)
    #–æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π , –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä —Å –∫–Ω–æ–ø–∫–∞–º–∏
    #–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –º–æ–¥—É–ª–µ all_funcctions.py
    time_now =  datetime.now()
    await reader_create_button(text, event, message, id_chennal,f'üì¨VIP_VIP-channelüì¨\n{time_now}', Config.channel_vip_vip_reverse)



#–æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º –∏ –ø—Ä—è–º—ã–µ –ø–ª–∞—Ç–∫–∏
@client2.on(events.NewMessage(chats=Config.channel_vip_vip_id))
async def vip_channels_handler(event):
    id_chennal = event.message.chat_id  # –¥–æ—Å—Ç–∞–µ–º id—á–∞—Ç–∞ –∏–ª–∏ –∫–∞–∫–Ω–∞–ª –æ—Ç –∫–æ—Ç–æ—Ä–æ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    text = event.message.message  # –¥–æ—Å—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏
    message = event.message
    #print(text)
    # await get_dialodgs()
    time_now = str(datetime.now())[11:-4]
    await reader_create_button(text, event, message, id_chennal,f'üì¨VIP_VIP-channelüì¨\n‚è∞{time_now}‚è∞', Config.channel_vip_vip_reverse)
    tiker = str(get_keyword_tiker_moex(text, Config.tickers_moex))  # –Ω–∞—Ö–æ–¥–∏–º —Ç–∏–∫–µ—Ä –≤ —Ç–µ–∫—Å—Ç–µ
    if tiker == 'ü§∑‚Äç‚ôÇ':  # –µ—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–∏–∫–µ—Ä–∞ MOEX
        print(f'–í –¥–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Ç–µ–∫–µ—Ä—ã MOEX')
    else:  # –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–∏–∫–µ—Ä –≤ —Ç–µ–∫—Å—Ç–µ
        if id_chennal ==  Config.channel_vip_vip['–ú–∞—Å—Ç–µ—Ä –†–æ—Å—Å–∏—èüí∞']:
            time_now = str(datetime.now())[11:-4]
            print('ü•µü•µü•µ - –ú–∞—Å—Ç–µ—Ä –†–æ—Å—Å–∏—èüí∞' , time_now)
            chernihMaster_reading(text, tiker)
        if id_chennal ==  Config.channel_vip_vip['–ë–∏—Ä–∂–µ–≤–∏–∫ VIP | –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –∏ –¢—Ä–µ–π–¥–∏–Ω–≥üí∞']:
            time_now = str(datetime.now())[11:-4]
            print('ü•µü•µü•µ - –ë–∏—Ä–∂–µ–≤–∏–∫ VIPüí∞' , time_now)
            birgewik_reading(text, tiker)
        if id_chennal == Config.channel_vip_vip['–í–ò–ü –∫–∞–Ω–∞–ªüí∞']:
            time_now = str(datetime.now())[11:-4]
            print('ü•µü•µü•µ - –ß–µ—Ö–æ–≤ –í–ò–ü –∫–∞–Ω–∞–ªüí∞' , time_now)
            chehov_reading(text, tiker)

#–≤ —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –≤ –∫–∞–Ω–∞–ª –Ω–æ–≤–æ—Å—Ç–æ–Ω–æ–π
#–ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —Ç–µ–∫—Å—Ç —ç—Ç–æ–≥–æ , –¥–ª—è –ø—Ä–µ–¥–æ—Ç—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–µ–π
check1 = 0
all_signals = []



#–ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∏–∞–ª–æ–≥–∏ , —Ñ—É–Ω–∫—Ü–∏—è –∫–æ—Ä—É—Ç–∏–Ω–∞ (–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –≤ —Å–∞–º–æ–º –Ω–∏–∑—É –ª–∏—Å—Ç–∞ )


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç')\

@dp.message_handler()
async def process_start_command(message: types.Message):
    print(message)
    url = message["entities"][0]["url"]
    print(url)
    response = get_request(url)
    soup = BeautifulSoup(response.text , 'html.parser')
    div_tag = soup.find('div', {'style': 'word-break: break-word; word-wrap: break-word; white-space: pre-wrap;'})
    if div_tag:
        extracted_text = div_tag.get_text(strip=True)
        text = disclouser(extracted_text)
        print(extracted_text)
        print(text)
    # await bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç')




#—â–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–æ–∫
@dp.callback_query_handler()
async def buttons_press(callback_query):
    print(callback_query.data)
    if str(callback_query.data).split()[0] == '2':
        tiker = str(callback_query.data).split()[-1]
        print(tiker)
        buy = 'buy'
        print(buy)
        summ = risk(tiker)
        create_limit_order(tiker, buy, summ, 0)
        await bot.send_message(-1001701470058,f'üò± full  - {tiker} {summ} {buy} ')
        await callback_query.answer()
    else:
        if str(callback_query.data).split()[0] == '0':
            tiker = str(callback_query.data).split()[-1]
            print(tiker)
            buy = str(callback_query.data).split()[2]
            print(buy)
            summ = str(callback_query.data).split()[1]
            print(summ)
            create_limit_order(tiker,buy,summ, 0)
            await bot.send_message(-1001701470058, f'{tiker}')
            # await bot.send_message(-1001701470058, f'üíµ–ü–æ—Ä—Ç—Ñ–µ–ª—å\n{porfolio}\nüß∞–ü–æ–∑–∏—Ü–∏–∏\n{pozicion}\nüìí–û—Ä–¥–µ—Ä–∞\n{all_orders}')
            await callback_query.answer()
        elif str(callback_query.data).split()[0] == '1':
            tiker = str(callback_query.data).split()[-1]
            print(tiker)
            buy = str(callback_query.data).split()[2]
            print(buy)
            summ = str(callback_query.data).split()[1]
            print(summ)
            create_limit_order_profit(tiker, buy, summ, 0)
            await bot.send_message(-1001701470058, f'{tiker}')
            # await bot.send_message(-1001701470058, f'üíµ–ü–æ—Ä—Ç—Ñ–µ–ª—å\n{porfolio}\nüß∞–ü–æ–∑–∏—Ü–∏–∏\n{pozicion}\nüìí–û—Ä–¥–µ—Ä–∞\n{all_orders}')
            await callback_query.answer()


#–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∫–∞–Ω–∞–ª–æ–≤ –∫—É–ø–ª–ª–µ–Ω–Ω—ã—Ö –∏ –ø–µ—Ä–µ—Å—ã–ª–æ–≤ —Å–æ —Å–ø–∏—Å–∫–∞ –ø–∞–ø–ø–µ—Ä–æ–≤ Config.pamper_channels_id
@client.on(events.NewMessage(chats=Config.pamper_channels_id))
async def pamper_channels_handler(event):
    id_chennal = event.message.chat_id# –¥–æ—Å—Ç–∞–µ–º id—á–∞—Ç–∞ –∏–ª–∏ –∫–∞–∫–Ω–∞–ª –æ—Ç –∫–æ—Ç–æ—Ä–æ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    text = event.message.message # –¥–æ—Å—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏
    tiker = str(get_keyword_tiker_moex(text, Config.tickers_moex))# –Ω–∞—Ö–æ–¥–∏–º —Ç–∏–∫–µ—Ä –≤ —Ç–µ–∫—Å—Ç–µ
    if tiker == 'ü§∑‚Äç‚ôÇ': #–µ—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–∏–∫–µ—Ä–∞ MOEX
        print(f'–í –¥–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Ç–µ–∫–µ—Ä—ã MOEX')
    else:#–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–∏–∫–µ—Ä –≤ —Ç–µ–∫—Å—Ç–µ
        if id_chennal == Config.pamper_channels['–°–ò–ì–ù–ê–õ–´ –æ—Ç CASHFLOW']:
            cashflow_publick_reading(text, tiker)
        if id_chennal == Config.pamper_channels['–ú–û–°–ö–û–í–°–ö–ò–ô –ò–ù–í–ï–°–¢–û–†']:
            mosinvestor_publick_reading(text, tiker)


#–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∫–∞–Ω–∞–ª–∞ fast&text only, —Ä–∞–∑–Ω—ã—Ö –ø–∞–º–ø–µ—Ä–æ–≤ , –ø–µ—Ä–µ—Å—ã–ª –±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –∏ –∫–∞–∂–µ—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ
@client.on(events.NewMessage(chats=Config.fast_id))
async def vip_channels_handler(event):
    id_chennal = event.message.chat_id  # –¥–æ—Å—Ç–∞–µ–º id—á–∞—Ç–∞ –∏–ª–∏ –∫–∞–∫–Ω–∞–ª –æ—Ç –∫–æ—Ç–æ—Ä–æ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    text = event.message.message  # –¥–æ—Å—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏
    # print(text)
    tiker = str(get_keyword_tiker_moex(text, Config.tickers_moex))  # –Ω–∞—Ö–æ–¥–∏–º —Ç–∏–∫–µ—Ä –≤ —Ç–µ–∫—Å—Ç–µ
    header_message = str(event.message.message).split('\n')[0]#–∏–∑ –∫–∞–∂–¥–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã—Ä–µ–∑–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ , –≥–¥–µ —É–∫–∞–∑–∞–Ω–æ —Å –∫–∞–∫–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –ø–µ—Ä—Å—ã–ª
    if tiker == 'ü§∑‚Äç‚ôÇ':  # –µ—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –Ω–µ—Ç —Ç–∏–∫–µ—Ä–∞ MOEX
        print(f'–í –¥–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Ç–µ–∫–µ—Ä—ã MOEX')
    else:  # –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–∏–∫–µ—Ä –≤ —Ç–µ–∫—Å—Ç–µ
        if '–ü–µ—Ä–µ—Å–ª–∞–Ω–æ –∏–∑ K-trade' in  header_message:
            print('ü•µü•µü•µü•µü•µü•µü•µ - K-trade')
            k_trade_reading(text, tiker)
        if '–ü–µ—Ä–µ—Å–ª–∞–Ω–æ –∏–∑ GP INTRADAY' in  header_message:
            print('ü•µü•µü•µü•µü•µü•µü•µ - Goodwin Production')
            goodwin_reading(text, tiker)
        # if '–û–ª–µ–≥ —Ç–æ—Ä–≥—É–µ—Ç' in  header_message:
        #     oleg_reading(text, tiker)
        #     print('ü•µü•µü•µü•µü•µü•µü•µ - –û–ª–µ–≥ —Ç–æ—Ä–≥—É–µ—Ç')
        if '–ö–ª—É–± ProfitKing' in  header_message:
            print('ü•µü•µü•µü•µü•µü•µü•µ - –ö–ª—É–± ProfitKing')
            ProfitKing_reading(text, tiker)
        if '–í–ò–ü –∫–∞–Ω–∞–ª' in  header_message:
            print('ü•µü•µü•µü•µü•µü•µü•µ - –ß–µ—Ö–æ–≤ –í–ò–ü –∫–∞–Ω–∞–ª')
            chehov_reading(text, tiker)
        if '–†–§+–°–®–ê' in  header_message:
            print('ü•µü•µü•µü•µü•µü•µü•µ - –ß–µ—Ä–Ω—ã—Ö –º–∞—Å—Ç–µ—Ä —Ä–æ—Å—Å–∏—è ')
            chernihMaster_reading(text, tiker)
        if 'Premium –°–ò–ì–ù–ê–õ–´' in  header_message:
            print('ü•µü•µü•µü•µü•µü•µü•µ - Premium –°–ò–ì–ù–ê–õ–´  ')
            cashflow_vip_reading(text, tiker)



#–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–æ–ª—å–∫–æ –∏–∑ –∫–∞–Ω–∞–ª–∞ id –∏–∑ —Å–ø–∏—Å–∫–∞ channel_pyblic_id
@client.on(events.NewMessage(chats=Config.channel_pyblic_id))
async def vip_channels_handler(event):
    # dialogs = await get_dialodgs()
    # print(dialogs)
    # –¥–æ—Å—Ç–∞–µ–º id—á–∞—Ç–∞ –∏–ª–∏ –∫–∞–∫–Ω–∞–ª –æ—Ç –∫–æ—Ç–æ—Ä–æ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    id_chennal = event.message.chat_id
    # print(id_chennal)
    # –¥–æ—Å—Ç–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–µ —Å –º–µ–¥–∏–∞
    message = event.message
    # print(message)
    # –¥–æ—Å—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏
    text = event.message.message
    # –æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π , –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä —Å –∫–Ω–æ–ø–∫–∞–º–∏
    # –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –º–æ–¥—É–ª–µ all_funcctions.py
    if id_chennal == Config.channel_pyblic_dict['–û–ª–µ —Ç–æ—Ä–≥—É–µ—Ç']:
        print(event.message)
    time_now = str(datetime.now())[11:-4]
    await reader_create_button(text, event, message, id_chennal, f'üê¢ üõÇPublic - channelüõÇ\n‚è∞{time_now}‚è∞', Config.channel_pyblic_dict_reverse)


#–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–æ–ª—å–∫–æ –∏–∑ –∫–∞–Ω–∞–ª–∞ id –∏–∑ —Å–ø–∏—Å–∫–∞ channel_vip_id
@client.on(events.NewMessage(chats=Config.channel_vip_id))
async def vip_channels_handler(event):
    # –¥–æ—Å—Ç–∞–µ–º id—á–∞—Ç–∞ –∏–ª–∏ –∫–∞–∫–Ω–∞–ª –æ—Ç –∫–æ—Ç–æ—Ä–æ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    id_chennal = event.message.chat_id
    # –¥–æ—Å—Ç–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–µ —Å –º–µ–¥–∏–∞
    message = event.message
    print(message.message)
    # –¥–æ—Å—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏
    text = event.message.message
    if id_chennal == Config.channel_vip_dict['31. Antrading Official +| VipPirates']:
        print(text)
    #–æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π , –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä —Å –∫–Ω–æ–ø–∫–∞–º–∏
    #–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –º–æ–¥—É–ª–µ all_funcctions.py
    time_now = str(datetime.now())[11:-4]
    await reader_create_button(text, event, message, id_chennal,f'üî∏VIP-channel\n‚è∞{time_now}‚è∞', Config.channel_vip_dict_reverse)




#–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Ç–æ–ª—å–∫–æ –∏–∑ –∫–∞–Ω–∞–ª–∞ id –∏–∑ —Å–ø–∏—Å–∫–∞ news_vip_id
@client.on(events.NewMessage(chats=Config.news_vip_id))
async def vip_channels_handler(event):
    # –¥–æ—Å—Ç–∞–µ–º id—á–∞—Ç–∞ –∏–ª–∏ –∫–∞–∫–Ω–∞–ª –æ—Ç –∫–æ—Ç–æ—Ä–æ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    id_chennal = event.message.chat_id
    # print(id_chennal)
    # –¥–æ—Å—Ç–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–µ —Å –º–µ–¥–∏–∞
    message = event.message
    # print(message)
    # –¥–æ—Å—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏
    text = event.message.message
    #–æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π , –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä —Å –∫–Ω–æ–ø–∫–∞–º–∏
    #–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –º–æ–¥—É–ª–µ all_funcctions.py
    time_now = str(datetime.now())[11:-4]
    await reader_create_button(text, event, message, id_chennal,f'üìÆ VIP-news\n‚è∞{time_now}‚è∞', Config.news_vip_dict_reverse)


#
# @client.on(events.NewMessage(chats=Config.tdmap_channels_id))
async def vip_channels_handler(event):
    user_id = event.message.from_id
    # –¥–æ—Å—Ç–∞–µ–º id—á–∞—Ç–∞ –∏–ª–∏ –∫–∞–∫–Ω–∞–ª –æ—Ç –∫–æ—Ç–æ—Ä–æ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    id_chennal = event.message.chat_id
    # print(id_chennal)
    # –¥–æ—Å—Ç–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–µ —Å –º–µ–¥–∏–∞
    message = event.message
    # print(message)
    # –¥–æ—Å—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏
    text = event.message.message
    #–æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π , –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä —Å –∫–Ω–æ–ø–∫–∞–º–∏
    #–Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –º–æ–¥—É–ª–µ all_funcctions.py
    if user_id == Config.tdmap_user_id :
        await reader_create_button(text, event, message, id_chennal,f'ü™ßü™ßü™ß - TDmap - ü™ßü™ßü™ß' , Config.tdmap_channels_reverse)







# @client.on(events.NewMessage())
# async def new(event):
#     dialogs = await get_dialodgs()
#     print(dialogs)




if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ Telethon
    client.start()
    client2.start()
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ aiogram
    executor.start_polling(dp)
    # client.loop.run_until_complete(main())
    # client.loop.run_until_complete(get_dialodgs())

